esphome:
  name: 6dials

esp8266:
  board: d1_mini_lite

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "6Dials Fallback Hotspot"
    password: "qJZlcfcIvGqY"

captive_portal:

i2c:
  sda: D2
  scl: D1
  scan: True
  frequency: 500kHz

pca9685:
  - id: pca9685_hub1
    address: 0x40
    frequency: 50 Hz

servo:
  - id: servo1 
    output: spwm1
    transition_length: 1s
  - id: servo2 
    output: spwm2
    transition_length: 1s
  - id: servo3 
    output: spwm3
    transition_length: 1s
  - id: servo4 
    output: spwm4
    transition_length: 1s
  - id: servo5 
    output: spwm5
    transition_length: 1s
  - id: servo6 
    output: spwm6
    transition_length: 1s

# the PWM outputs
output:
  - platform: pca9685
    id: spwm1
    channel: 0
  - platform: pca9685
    id: spwm2
    channel: 1
  - platform: pca9685 
    id: spwm3
    channel: 2
  - platform: pca9685
    id: spwm4
    channel: 3
  - platform: pca9685
    id: spwm5
    channel: 4
  - platform: pca9685
    id: spwm6
    channel: 5

# expose it to HA
number:
  - platform: template
    name: 1 AQI
    min_value: 0
    max_value: 500
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo1
            # range is -1 to 1
            level: !lambda 'return ((x / 500.0) * 2) - 1.0;'
  - platform: template
    name: 2 Current Temp F
    min_value: 0.0
    max_value: 110.0
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo2
            # range is -1 to 1
            level: !lambda 'return (((x / 110) * 2) - 1.0) * -1.0;'
  - platform: template
    name: 3 Hourly Precip Inches
    min_value: 0.0
    max_value: 2.0
    step: 0.001
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo3
            # range is -1 to 1
            level: !lambda 'return ((x / 2) * 2) - 1.0;'
  - platform: template
    name: 4 Pct Chance of Rain
    min_value: 0.0
    max_value: 100.0
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo4
            # range is -1 to 1
            level: !lambda 'return (((x / 100) * 2) - 1.0) * -1.0;'
  - platform: template
    name: 5 Daily Temp Low F
    min_value: 0.0
    max_value: 110.0
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo5
            # range is -1 to 1
            level: !lambda 'return ((x / 110) * 2) - 1.0;'
  - platform: template
    name: 6 Daily Temp High F
    min_value: 0.0
    max_value: 110.0
    step: 1
    optimistic: true
    set_action:
      then:
        - servo.write:
            id: servo6
            # range is -1 to 1
            level: !lambda 'return (((x / 110) * 2) - 1.0) * -1.0;'

  # single handle to control all the servos at once
  - platform: template
    name: All Servos
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    initial_value: 0.0
    set_action:
      then:
        - servo.write:
            id: servo1
            level: !lambda 'return x / 100.0;' 
        - servo.write:
            id: servo2
            level: !lambda 'return x / 100.0;' 
        - servo.write:
            id: servo3
            level: !lambda 'return x / 100.0;' 
        - servo.write:
            id: servo4
            level: !lambda 'return x / 100.0;' 
        - servo.write:
            id: servo5
            level: !lambda 'return x / 100.0;' 
        - servo.write:
            id: servo6
            level: !lambda 'return x / 100.0;' 


